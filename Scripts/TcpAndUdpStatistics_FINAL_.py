#!/usr/bin/env python3
import csv
from collections import defaultdict
from io import StringIO
import matplotlib.pyplot as plt

# add the csv you copied from the Wireshark statistics -> UDP or TCP tab into here
input_csv_string = """
"192.168.178.1",5353,"224.0.0.251",5353,1,77,1,1,77,0,0,8.705024,0,"",""
"192.168.178.1",1900,"239.255.255.250",1900,39,14734,7,39,14734,0,0,16.20908,166.591793,707,0
"192.168.178.1",53805,"255.255.255.255",53805,1,58,59,1,58,0,0,577.439282,0,"",""
"192.168.178.151",5353,"224.0.0.251",5353,2,230,5,2,230,0,0,14.917502,243.478292,7,0
"192.168.178.158",2228,"192.168.178.1",53,2,269,10,1,80,1,189,54.828025,0.01107600000000275,57782,136511
"192.168.178.158",3789,"192.168.178.1",53,2,184,29,1,76,1,108,57.281686,0.012515999999997973,48577,69031
"192.168.178.158",4901,"192.168.178.1",53,2,250,13,1,80,1,170,54.850649,0.009695000000000675,66013,140278
"192.168.178.158",9635,"192.168.178.1",53,2,381,15,1,88,1,293,54.861795,0.010395000000002597,67724,225493
"192.168.178.158",10400,"192.168.178.1",53,2,283,47,1,90,1,193,114.355316,0.019621000000000777,36695,78691
"192.168.178.158",10499,"192.168.178.1",53,2,162,21,1,73,1,89,55.776213,0.0023100000000013665,"",""
"192.168.178.158",11379,"192.168.178.1",53,2,218,39,1,72,1,146,59.142525,0.009608999999997536,59943,121552
"192.168.178.158",13038,"192.168.178.1",53,2,222,27,1,95,1,127,57.206289,0.009573000000003162,79389,106131
"192.168.178.158",14347,"192.168.178.1",53,2,311,45,1,78,1,233,59.701762,0.011471000000000231,54398,162496
"192.168.178.158",14914,"192.168.178.1",53,2,361,43,1,83,1,278,59.700967,0.011167000000000371,59460,199158
"192.168.178.158",15666,"192.168.178.1",53,2,256,33,1,82,1,174,57.884255,0.010220999999994262,64181,136190
"192.168.178.158",16196,"192.168.178.1",53,2,321,25,1,96,1,225,57.1274,0.011563999999999908,66413,155655
"192.168.178.158",16299,"192.168.178.1",53,2,337,16,1,88,1,249,54.862319,0.00987100000000396,71320,201803
"192.168.178.158",16798,"192.168.178.1",53,2,204,30,1,76,1,128,57.282781,0.011420999999998571,53235,89659
"192.168.178.158",17317,"192.168.178.1",53,2,204,31,1,86,1,118,57.420627,0.00798399999999333,86172,118236
"192.168.178.158",17660,"192.168.178.1",53,2,230,32,1,86,1,144,57.421153,0.010618000000000904,64795,108495
"192.168.178.158",19859,"192.168.178.1",53,2,250,37,1,80,1,170,58.144014,0.0020310000000023365,"",""
"192.168.178.158",20403,"192.168.178.1",53,2,329,24,1,87,1,242,56.482331,0.010503999999997404,66260,184310
"192.168.178.158",21295,"192.168.178.1",53,2,347,19,1,79,1,268,55.486226,0.01112699999999478,56798,192684
"192.168.178.158",21739,"192.168.178.1",53,2,196,49,1,82,1,114,114.36591,0.012416000000001759,52835,73453
"192.168.178.158",25965,"192.168.178.1",53,2,270,14,1,80,1,190,54.852401,0.010050999999997146,63675,151228
"192.168.178.158",31838,"192.168.178.1",53,2,190,53,1,87,1,103,146.779527,0.012329999999991514,56447,66828
"192.168.178.158",32805,"192.168.178.1",53,2,277,35,1,87,1,190,58.010107,0.011335000000002537,61402,134097
"192.168.178.158",37684,"192.168.178.1",53,2,178,51,1,81,1,97,115.031093,0.011078999999995176,58489,70042
"192.168.178.158",38710,"192.168.178.1",53,2,249,9,1,80,1,169,54.82698,0.012121000000000492,52800,111541
"192.168.178.158",41300,"192.168.178.1",53,2,238,40,1,72,1,166,59.142958,0.01117500000000149,51543,118836
"192.168.178.158",42494,"192.168.178.1",53,2,317,44,1,83,1,234,59.701338,0.009731000000002155,68235,192374
"192.168.178.158",44918,"192.168.178.1",53,4,522,41,2,160,2,362,59.336986,0.011270999999993592,113565,256942
"192.168.178.158",46254,"192.168.178.1",53,2,232,12,1,79,1,153,54.83317,0.010199999999997544,61960,120000
"192.168.178.158",47196,"192.168.178.1",53,2,299,46,1,78,1,221,59.701907,0.01022700000000043,61014,172875
"192.168.178.158",49877,"192.168.178.1",53,4,522,42,2,160,2,362,59.558146,0.0018949999999975375,"",""
"192.168.178.158",49940,"192.168.178.1",53,2,319,48,1,90,1,229,114.356023,0.018914000000009423,38067,96859
"192.168.178.158",49950,"192.168.178.1",53,2,347,26,1,96,1,251,57.127679,0.010319000000002632,74425,194592
"192.168.178.158",50695,"192.168.178.1",53,2,303,20,1,79,1,224,55.486494,0.0108589999999964,58200,165024
"192.168.178.158",51251,"192.168.178.1",53,2,247,28,1,95,1,152,57.221818999999996,0.01115300000000019,68143,109028
"192.168.178.158",52132,"192.168.178.1",53,2,270,38,1,80,1,190,58.144855,0.0022829999999984807,"",""
"192.168.178.158",52349,"192.168.178.1",53,2,231,54,1,87,1,144,146.779975,0.011881999999985737,58575,96953
"192.168.178.158",53068,"192.168.178.1",53,2,297,36,1,87,1,210,58.010817,0.010624999999997442,65505,158117
"192.168.178.158",55106,"192.168.178.1",53,2,198,11,1,79,1,119,54.832685,0.010685000000002276,59148,89096
"192.168.178.158",56644,"192.168.178.1",53,2,223,50,1,82,1,141,114.366287,0.01311699999999405,50011,85995
"192.168.178.158",57309,"192.168.178.1",53,2,220,22,1,73,1,147,55.776937,0.0379390000000015,15393,30997
"192.168.178.158",58562,"192.168.178.1",53,2,250,17,1,80,1,170,54.873007,0.001353000000001714,"",""
"192.168.178.158",59275,"192.168.178.1",53,2,300,23,1,87,1,213,56.482106,0.010728999999997768,64870,158821
"192.168.178.158",59979,"192.168.178.1",53,2,219,52,1,81,1,138,115.031465,0.01277400000000739,50728,86425
"192.168.178.158",60949,"192.168.178.1",53,2,270,18,1,80,1,190,54.87358,0.0020530000000036353,"",""
"192.168.178.158",63182,"192.168.178.1",53,2,276,34,1,82,1,194,57.884689,0.011003999999999792,59614,141039
"192.168.178.158",5353,"224.0.0.251",5353,3,289,3,3,289,0,0,8.70606,369.36809700000003,6,0
"fd53:50dc:9894:0:2de5:e879:9ece:ce0d",5353,"ff02::fb",5353,3,333,4,3,333,0,0,8.706507,369.367111,7,0
"fd53:50dc:9894:0:3ea6:2fff:fe39:dd22",1900,"ff05::c",1900,28,11632,56,28,11632,0,0,179.92171,2.970692000000014,31324,0
"fd53:50dc:9894:0:688f:3eaa:ba23:faca",52437,"fd53:50dc:9894:0:3ea6:2fff:fe39:dd22",53,4,536,57,2,188,2,348,391.004949,0.011732999999992444,128185,237279
"fd53:50dc:9894:0:688f:3eaa:ba23:faca",59549,"fd53:50dc:9894:0:3ea6:2fff:fe39:dd22",53,66,12676,8,33,3400,33,9276,17.537967,583.907325,46,127
"fd53:50dc:9894:0:688f:3eaa:ba23:faca",61240,"fd53:50dc:9894:0:3ea6:2fff:fe39:dd22",53,66,12880,0,33,3406,33,9474,4.516259,596.929033,45,126
"fd53:50dc:9894:0:688f:3eaa:ba23:faca",61611,"fd53:50dc:9894:0:3ea6:2fff:fe39:dd22",53,4,536,58,2,188,2,348,391.005391,0.009042000000022199,166334,307896
"fe80::18ca:77ee:6f9a:de04",5353,"ff02::fb",5353,2,270,6,2,270,0,0,14.917502,243.478545,8,0
"fe80::3ea6:2fff:fe39:dd22",53805,"ff02::1",53805,1,78,60,1,78,0,0,577.439556,0,"",""
"fe80::3ea6:2fff:fe39:dd22",1900,"ff02::c",1900,28,11352,55,28,11352,0,0,179.9197,2.972020999999984,30556,0
"fe80::3ea6:2fff:fe39:dd22",5353,"ff02::fb",5353,1,97,2,1,97,0,0,8.705364,0,"",""
""".strip()

local_ip = "10.0.2.15"      # change if your local ip with which yozu meassured differs
reader = csv.reader(StringIO(input_csv_string))
totals = defaultdict(lambda: {"sent": 0, "received": 0})
total_sent = 0

for row in reader:
    a, b = row[0], row[2]
    bytes_a_to_b = int(row[8])
    bytes_b_to_a = int(row[10])

    if a == local_ip:
        ip, sent, recv = b, bytes_a_to_b, bytes_b_to_a
    elif b == local_ip:
        ip, sent, recv = a, bytes_b_to_a, bytes_a_to_b
    else:
        continue

    totals[ip]["sent"] += sent
    totals[ip]["received"] += recv
    total_sent += sent if a == local_ip else 0

# console output 
rows = []
for ip, data in totals.items():
    sent = data["sent"]
    recv = data["received"]
    share = sent / total_sent if total_sent else 0
    ratio = sent / recv if recv else float("inf")
    rows.append((share, ratio, ip, sent, recv))

rows.sort(reverse=True, key=lambda x: x[0])

print(f"Total outgoing data from {local_ip}: {total_sent:,} bytes, all the following sent/recieved are Bytes")
print(f'{"IP":45} {"Sent to IP":>15} {"received by IP":>15} {"Share":>8} {"S/R ratio":>10}')
print("-" * 95)
for share, ratio, ip, sent, recv in rows:
    print(f"{ip:45} {sent:15d} {recv:15d} {share:7.2%} {ratio:10.2f}")
print("-" * 95)
print(f'{"Sum shares (debug)"} {sum(x[0] for x in rows):7.2%}')

# Pie chrt creation
labels = [ip for _, _, ip, _, _ in rows]
sizes  = [sent for _, _, _, sent, _ in rows]

fig1, ax1 = plt.subplots()
ax1.pie(sizes, labels=labels, autopct=lambda pct: f"{pct:.1f}%", startangle=90)
ax1.axis("equal")
ax1.set_title(f"outgoing traffic share by ip (total {total_sent} bytes)")

# Bar Chart creation 
peers = [ip for _, _, ip, _, _ in rows]
ratios = [ratio for _, ratio, _, _, _ in rows]

fig2, ax2 = plt.subplots(figsize=(10, 6))
ax2.barh(peers[::-1], ratios[::-1])  # largest at top
ax2.set_xlabel("Sent / Received Ratio")
ax2.set_title("outgoing vs incoming Byte Ratio per Ip")
plt.tight_layout()

plt.show()
